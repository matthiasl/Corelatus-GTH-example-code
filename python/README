Author: matthias@corelatus.se
----------------------------------------------------------------------

Introduction

  This is example code in Python for a Corelatus GTH. It depends on the
  'pyparsing' package.

  The examples were tested on python3 on linux.

  Each example is built on top of a little library, gth/apilib.py, which
  lets you hack up python code to do pretty much anything supported by
  the GTH, i.e. you don't have to write your own parser.


Command line for exploring GTH configuration
--------------------------------------------

  'gth.py' does (almost) all the things which the GTH's built-in SSH
  CLI can do:

    - enable and disable E1/T1 and SDH/SONET interfaces

    - query attributes on all resources, e.g. read out the counters
      for E1/T1, SDH/SONET and Ethernet interfaces.

    - set attributes on resources, e.g. configure the IP address and
      NTP server

    - zero (reset) counters on resources, e.g. clear the error counters
      on E1/T1 or SDH/SONET interfaces

    - reboot

  Run 'gth.py' without arguments to see some examples.


E1/T1 timeslot dump to a file
-----------------------------

  Records a bit-exact copy of an E1 timeslot to a file on your PC:

    >./record.py 172.16.1.10 1A 16 4000 signalling.raw
    All done, wrote 4000 octets


Recorded file playback
----------------------

  This example requires 'Messenger' hardware.

  Plays back a previously recorded timeslot on an E1/T1.
  Typical use:

    >./play.py 172.16.1.10 1A 16 signalling.raw
    All done, sent 2276 octets

  The file could contain audio (8kHz Alaw, without a header) or it
  could contain signalling. The GTH treats both the same. Most likely
  it's a dump of an E1/T1 you recorded earlier using the previous
  example.


Sniff ISUP
----------

  Print out when calls start and stop on an SS7 link.

  Uses the GTH to decode MTP-1 and MTP-2. MTP-3 and ISUP decoding
  is done in python. Typical use:

     >./sniff_isup.py 172.16.1.10 1A 16
     IAM called party: 21255512 calling party: 11313555 CIC=0
     ignoring ISUP address complete
     ignoring ISUP answer
     ignoring ISUP release
     RLC on CIC=0

Transmit signalling
-------------------

  This example requires 'Messenger' hardware.

  Transmit three types of signalling: ordinary 64 kbit/s MTP-2,
  MTP-2 Annex A (high speed; 1534 kbit/s) and ATM AAL0. This is
  to demonstrate how to use a Corelatus Messenger to transmit signalling.

    >./gth.py 172.16.1.10 enable pcm1A mode T1
    >./transmit_ss7.py  gth30 1A

  By connecting a loopback cable between 1A and 2A (The P1 and P2
  connectors), you can observe the signalling, either as a raw
  bit-stream using 'record.py' or as decoded signalling using the
  'save_to_pcap' example in the C sample code.

# eof
